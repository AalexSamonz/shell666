server {
   server_name xxx.com.com www.xxx.com.com;
   listen 443  ssl;
   ssl_certificate /usr/local/openresty/nginx/conf/ssl/xxx.com/xxx.com_chain.pem;
   ssl_certificate_key /usr/local/openresty/nginx/conf/ssl/xxx.com/xxx.com_key.pem;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

 

   location / {
       proxy_pass https://xxx.666.com;
  proxy_ssl_certificate /usr/local/openresty/nginx/conf/ssl/fullchain.crt;
  proxy_ssl_certificate_key /usr/local/openresty/nginx/conf/ssl/private.pem;
        index index.jsp index.htm index.html;
        proxy_cache 8sqq;
        proxy_cache_valid 1d;
        proxy_cache_min_uses 5;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $http_x_forwarded_for;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_headers_hash_max_size 51200;
        proxy_headers_hash_bucket_size 6400;
	proxy_ssl_session_reuse on;
        add_header              Nginx-Cache "$upstream_cache_status";
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        proxy_redirect off;

    }
  location ~* \.(jpg|jpeg|png|gif|js|css)$ {
#Nginx 会根据 proxy_cache_max_size 配置项来限制缓存的最大大小。如果缓存内容超过了 proxy_cache_max_size 配置项的值，那么 Nginx 会根据 proxy_cache_purge 配置项来删除缓存内容。

#proxy_cache_purge 配置项有以下几种模式：

#least_used：删除最近最少使用的缓存内容。
#first_in：删除最早进入缓存的内容。
#last_in：删除最近进入缓存的内容。
#touch：删除最近没有被访问的缓存内容。
 proxy_cache_purge least_used;   
    #proxy_cache_purge all;

    
  proxy_cache cache;
  proxy_cache_valid 200 302 301 10d;
  proxy_cache_key $uri;
  proxy_cache_bypass $args;
}



}
